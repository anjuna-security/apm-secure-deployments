diff --git a/cvm-securekey-release-app/AttestationUtil.cpp b/cvm-securekey-release-app/AttestationUtil.cpp
index 8ee233a..54c6b8f 100644
--- a/cvm-securekey-release-app/AttestationUtil.cpp
+++ b/cvm-securekey-release-app/AttestationUtil.cpp
@@ -878,9 +878,6 @@ int rsa_encrypt(EVP_PKEY *pkey, const PBYTE msg, size_t msglen, PBYTE *enc, size
     if (EVP_PKEY_encrypt_init(ctx) <= 0)
         handleErrors();
 
-#if defined(OPENSSL_VERSION_MAJOR) && OPENSSL_VERSION_MAJOR >= 3
-        // TODO: investiagate why setting padding and md algorithms causing SIGSEGV in OSSL 3.x
-#else
     // Set the RSA padding mode to either PKCS #1 OAEP
     if (EVP_PKEY_CTX_set_rsa_padding(ctx, RSA_PKCS1_OAEP_PADDING) <= 0)
         handleErrors();
@@ -888,7 +885,7 @@ int rsa_encrypt(EVP_PKEY *pkey, const PBYTE msg, size_t msglen, PBYTE *enc, size
     // Set RSA signature scheme to SHA256
     if (EVP_PKEY_CTX_set_rsa_oaep_md(ctx, EVP_sha256()) <= 0)
         handleErrors();
-#endif
+
     // Determine the buffer length for the encrypted data
     if (EVP_PKEY_encrypt(ctx, NULL, &outlen, msg, msglen) <= 0)
         handleErrors();
@@ -931,9 +928,6 @@ int rsa_decrypt(EVP_PKEY *pkey, const PBYTE msg, size_t msglen, PBYTE *dec, size
     if (EVP_PKEY_decrypt_init(ctx) <= 0)
         handleErrors();
 
-#if defined(OPENSSL_VERSION_MAJOR) && OPENSSL_VERSION_MAJOR >= 3
-        // TODO: investiagate why setting padding and md algorithms causing SIGSEGV in OSSL 3.x
-#else
     // Set the RSA padding mode to PKCS #1 OAEP
     if (EVP_PKEY_CTX_set_rsa_padding(ctx, RSA_PKCS1_OAEP_PADDING) <= 0)
         handleErrors();
@@ -941,7 +935,6 @@ int rsa_decrypt(EVP_PKEY *pkey, const PBYTE msg, size_t msglen, PBYTE *dec, size
     // Set RSA signature scheme to SHA256
     if (EVP_PKEY_CTX_set_rsa_oaep_md(ctx, EVP_sha256()) <= 0) // TODO: can be a parameter
         handleErrors();
-#endif
 
     // Determine the buffer length for the encrypted data
     if (EVP_PKEY_decrypt(ctx, NULL, &outlen, msg, msglen) <= 0)
@@ -1099,4 +1092,4 @@ bool Util::ReleaseKey(const std::string &attestation_url,
         std::cout << "The released key is of type " << EVP_PKEY_base_id(pkey) << ". Not sure what operations are supported." << std::endl;
         return false;
     }
-}
\ No newline at end of file
+}
